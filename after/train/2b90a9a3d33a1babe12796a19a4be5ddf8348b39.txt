The 2019 novel coronavirus, SARS-CoV-2, is an emerging pathogen of critical significance to international public health. Knowledge of the interplay between molecular-scale virus-receptor interactions, single-cell viral replication, intracellular-scale viral transport, and emergent tissue-scale viral propagation is limited. Moreover, little is known about immune system-virus-tissue interactions and how these can result in low-level (asymptomatic) infections in some cases and acute respiratory distress syndrome (ARDS) in others, particularly with respect to presentation in different age groups or pre-existing inflammatory risk factors like diabetes. A critical question for treatment and protection is why it appears that the severity of infection may correlate with the initial level of virus exposure. Given the nonlinear interactions within and among each of these processes, multiscale simulation models can shed light on the emergent dynamics that lead to divergent outcomes, identify actionable "choke points" for pharmacologic interactions, screen potential therapies, and identify potential biomarkers that differentiate response dynamics. Given the complexity of the problem and the acute need for an actionable model to guide therapy discovery and optimization, we introduce a prototype of a multiscale model of SARS-CoV-2 dynamics in lung and intestinal tissue that will be iteratively refined. The first prototype model was built and shared internationally as open source code and interactive, cloud-hosted executables in under 12 hours. In a sustained community effort, this model will integrate data and expertise across virology, immunology, mathematical biology, quantitative systems physiology, cloud and high performance computing, and other domains to accelerate our response to this critical threat to international health.
2 progress to acute respiratory distress syndrome (ARDS) in some patients 4, 5 . Age and comorbidities seem to be the main risk factors for development of severe disease 6-8 . However, the dynamics of virus replication, interaction with host immune responses, and spread within the respiratory tract are still being established. Because a vaccine may not be available for 9-18 months, there is a critical need to further understand the infection in order to quickly identify pharmacologic interventions and optimal therapeutic designs that work to lessen virus dissemination and disease severity. However, this requires an international community effort that integrates expertise across a variety of domains and a platform that can be iteratively updated as new information and data arises.
To aid this effort, we have assembled an international, multi-disciplinary coalition to rapidly develop an opensource, multi-scale tissue simulator that can be used to investigate mechanisms of intracellular viral replication, infection of epithelial cells, host immune response, and tissue damage. The aim of this project is to concentrate community modeling efforts to create a comprehensive multiscale simulation framework that can subsequently be calibrated, validated, and used to rapidly explore and optimize therapeutic interventions for COVID-19. Once the prototype has been completed (after several design iterations), this coalition will transition to maintain and support the simulation framework and aggregate calibrated/validated parameter values.
To address the acute need for rapid access to an actionable model, we are using a community-driven coalition and best open science practices to build and iteratively refine the model:
(1) Open source and GitHub: All simulation source code is shared as open source on GitHub, with welldefined, versioned and documented releases, and Zenodo-generated DOIs and archives. (2) Interactive cloud-hosted models: Every prototype version is rapidly transformed into a cloud-hosted, interactive model to permit faster scientific communication across communities, particularly with virologists and others who have essential insights but ordinarily would not directly run the simulation models. (3) Social media and virtual feedback: We enlist community participation (feedback, modeling contributions, software contributions, and data contributions) through social media, virtual seminars, web-based forms, and a dedicated Slack workspace. We are particularly encouraging feedback and data contributions by domain experts in virology, epidemiology, and mathematical biology (with a focus (4) Frequent preprint updates: Each model iteration is accompanied by a cloud-hosted, interactive app (see #2) and an updated preprint on bioRxiv. (5) Integration of feedback: All community feedback is evaluated to plan the next set of model refinements and recorded in an updated bioRxiv preprint.
Our first test of this workflow saw a first proof-of-concept software release (Steps 1-2) in 12 hours, and the first integration of community feedback and preprint dissemination was complete within a week. It is our intention to continue rapid iteration, with a new candidate model release every 7-10 days.
This project is community-driven, including the following contributions:
1) Community priorities: The community helps define the driving research questions, definition of the project scope, and selection of critical biological components to be modeled. 2) Consensus hypotheses: The community drives a shared, clearly-written consensus specification of the underlying biological hypotheses. 3) Mathematical modeling: The community helps develop, review and refine the mathematical interpretation of the biological hypotheses. 4) Computational implementation: The computational implementation is shared as open source, with community definition of specifications, unit tests, coding, and code review (via pull requests to the development branch). 5) Community feedback: Community feedback on the model realism, hypotheses, mathematics, computational implementation, and development techniques is encouraged throughout the development process. 6) Community parameter and data: Community contributions of parameter estimates and data contributions are aggregated to assist in model development and constraint. 3 Project scope While by definition the project scope can be refined by the community, the initial project scope is to:
1) Develop the general computational framework sufficiently to address many of the community-driven research questions. 2) Deliver a working simulation framework for use by others to perform calibration and validation. That is, the prototyping aims of this project are complete once the model is capable of demonstrating essential biological behaviors qualitatively. 3) To provide a software framework whose underlying hypotheses, mathematics, and computational implementation have been rigorously assessed by appropriate domain experts.
In particular, while this project will work to constrain, estimate, and calibrate parameters to the greatest extent possible, it is not within scope to delay software release until full calibration and validation. Those tasks are within scope of fully funded teams with dedicated experiments.
This project aims to deliver software that one can reasonably expect to calibrate and validate, thus freeing funded investigations from expensive early software development while providing a broad community consensus on key biological hypotheses. By rapidly prototyping this software, we aim to accelerate many funded research efforts.
As part of defining the project scope, we have identified the following critical model components:
1) Virus dissemination in epithelial tissue 2) Virus binding, endocytosis, replication, and exocytosis 3) Infected cell responses, including changes to metabolism, secreted signals, and death 4) Inflammatory response 5) Ramp up the immune response (particularly in lymph nodes) 6) Immune cell infiltration 7) Immune cell predation of infected and other cells. 8) Tissue damage by death of infected cells and immune cells 9) Early fluid leakage that can be regarded as an early marker or surrogate for ARDS
The coalition works under the following guiding principles:
• The model framework can be built with relatively sparse data, relying upon domain expertise and observations to choose its general form and assess its qualitative behavior.
• The model will be modular. Each submodel will have well-defined inputs and outputs of submodels, allowing parallel development and replacement of submodels with improved versions without change to the rest of the model.
• The submodels should be independently executable and verifiable, allowing parallel development with confidence.
• The overall model framework will periodically release numbered versions (distributions) that bundle the best working version of each submodel as it exists at the time of release, allowing end-users (the community) to use well-defined, well-tested snapshots of the project.
• The model framework should investigate the dynamics of infection and treatment, and not merely endpoints.
• The model should allow the community to as ask "what if" questions to guide experiments and interventions 9,10 .
• The model (and known parameter values) must be made publicly available as open source for maximum public benefit.
• The model will be made publicly available as an interactive web app to encourage community participation, to accelerate scientific dissemination, and to increase public educational benefit.
• We will use rapid prototyping to encourage a fast develop-test-refine cycle to build expertise and gain community feedback.
• We will develop model to point that it has correct qualitative behavior, so that calibration is likely to succeed. This is the "product" for use in subsequent investigations by multiple teams. See the scoping statements above.
• We will gather community consensus and pool efforts into a "standardized" model that captures key SARS-CoV-2 dynamics. We will supply this model to the community for use in parallel studies by multiple labs.
• We will encourage data and parameter sharing throughout this effort and by user community after model the model's "completion."
• As part of the model formulation, documentation, and dissemination, we will craft clearly delineated "conceptual model and hypotheses" to encourage development of independent models with independent methodologies and software frameworks • After the model prototyping is complete (the goal of this paper), we will enter a maintenance and support phase to fix bugs, support scientist users, and add features identified by user community.
Critical questions for the model framework While the model may not be able to address all of these scientific questions, the community determined that the work should be driven by these questions, and that each iteration of the model framework should aim to be amenable to an increasing number of these questions. We aim to enable investigations that ask:
• What are the critical "choke points" in viral infection, replication, and propagation?
• Which interventions could most effectively leverage identified vulnerabilities in viral replication?
• What unanticipated dynamics can emerge from a single molecular-scale inhibition?
• Does the initial level of exposure to the virus affect the severity of the progression of the disease and how could this effect be ameliorated?
• What are the key points of virus-immune system interactions that drive mild versus acute (e.g., ARDS) responses?
• What are key differences at the target-cell level during innate versus adaptive immune responses?
• Are there threshold levels of infection at the cellular or tissue level that indicate a switch from asymptomatic to symptomatic or from mild to severe disease in a patient?
• Through what mechanisms do certain patient characteristics, pre-existing conditions, or background medications increase the likelihood of adverse outcomes?
• What interventions could accelerate building immunity?
• What interventions can reduce or reverse adverse immune reactions?
• At what stage is a given intervention most beneficial?
• How does viral mutagenicity affect the robustness of a therapy or a therapeutic protocol?
• How does cellular heterogeneity affect infection dynamics?
• How does the nearby tissue environment, such as the mucus layer, affect infection dynamics?
• How does the infection spread from its initial locus of infection to other tissues (in particular from upper respiratory to lungs)? How does stochasticity impact these dynamics?
• How do tissues recover after clearance of local infection? Can scarring be minimized to reduce long-. CC-BY 4.0 International license author/funder. It is made available under a The copyright holder for this preprint (which was not peer-reviewed) is the . https://doi.org/10.1101/2020.04.02.019075 doi: bioRxiv preprint 5 term adverse effects in recovered patients?
• How do adverse effects in SARS-CoV-2 infected epithelia differ (mechanistically) from other infections and other modes of epithelial dysfunction?
This rapid prototyping effort brings together specialists from a broad variety of domains: virology and infectious diseases, mathematical biology, computer science, high performance computing, data science, and other disciplines. Therefore, it is critical that all members of the project have access to a clear description of underlying biology. In this section we outline key aspects of viral replication and host response in functional terms needed for development of agent-based, multi-scale and multi-physics models.
The key cell-level process is viral infection of a single cell, followed by replication to create new virions:
1. SARS-CoV-2 is a single-stranded enveloped RNA virus 11 . A virion (single virus particle) has a lipid coating (envelope) that protects the virus when outside a cell (or host). Each virus has dozens of spike glycoproteins that bind to ACE2 (receptors) on select cell membranes 3,11 .
2. Virions travel in the tissue microenvironment to reach a cell membrane. The spike binds to an available ACE2 receptor on the cell's membrane. Both passive transport (e.g., via diffusion in fluids) and active transport (e.g., by cilia-driven advection mucus) may play a role at slow and fast time scales, as well as surface contact transmission between neighboring cells.
3. The cell internalizes the adhered virus via endocytosis into a vesicle.
4. The endocytosed virion-now residing in a vesicle with lowered pH-is uncoated to release its mRNA contents into the cell cytoplasm.
Copying viral RNA creates a (-) RNA template, which is used for (+) RNA production.
6. RNA is used to synthesize viral RNA and proteins.
7. Viral proteins are transported to the interior surface of the cell membrane.
8. Viral proteins at cell membrane are assembled into virions.
9. Assembled virions are exported from the cell by exocytosis.
10. When a cell dies and lyses, some or all partly assembled and fully assembled virions can be released into the tissue microenvironment.
We note that once infected, an individual cell cannot "recover" (e.g., by actively degrading viral RNA and stopping endocytosis) to return to normal function; that cell is irreversibly committed to eventual death.
For further detail, see review articles on RNA virus replication dynamics 12, 13 .
While infected cells (e.g., type 1 or type 2 alveolar cells in the lung) cannot recover, they can respond to slow replication and reduce infection of nearby cells. Infected can secrete type I interferons (IFN-⍺,β), which diffuse and bind to receptors on nearby cells to slow viral replication, activate an inflammatory response, and induce gene transcription 14 , to slow cycling or induce apoptosis in these cells 15 . Secreted interferons can also modulate the function of innate and adaptive cellular immunity 15 . 6 Inflammatory and immune responses Lethal SARS and MERS in humans has been correlated with elevated IFN-⍺,β 20 , myeloid activity, and impaired T and B cells 21, 22 , although the timing of Type 1 IFN is critical 23, 24 . Type I IFNs secreted by infected cells or by immune cells diffuse to surrounding cells and recruit innate immune cells, such as macrophages and neutrophils, to the area. In COVID-19 patients, decreased numbers of T cells, natural killer (NK) cells, and, to a lesser extent, B cells occur, and the extent of T cell depletion has been correlated with disease severity 2,3,25 . Excessive IFN-⍺,β activation results in increased macrophage and neutrophil presence, which correlates with lung dysfunction 26, 27 . Delayed IFN-⍺,β production also promotes inflammatory macrophage recruitment that contributes to vascular leakage and impaired T-cell function 23, 24 . Activated macrophages also produce other proinflammatory cytokines like IL-1, IL-6, and TNF-⍺, among others, that enhance infiltration of immune cells and interact with endothelial cells to cause vasodilation 28 . Moreover, epithelial tissue death can reduce tissue integrity, contributing to further immune infiltration, fluid leakage and edema, and acute respiratory distress 29-31 .
In severe cases, a "cytokine storm" of pro-inflammatory cytokines (e.g., IL-2, IL-7, IL-10, G-CSF, IP-10, MCP-1, MIP-1A, and TNF-⍺) promotes extensive tissue damage 26 . During influenza virus infection, there is some evidence that ARDS is correlated with the extent of infection in the lower respiratory tract and increased cytokine activity resulting from exposure of the endothelium 32 . Other innate responses, such as neutrophils, have also been shown to be amplified in SARS-CoV-2 25 . These cells generally produce reactive oxygen species (ROS), which can induce the death of infected and healthy cells in the local environment 29 .
Coronaviruses have been shown to evade and modulate various host immune responses [33] [34] [35] . In addition to those discussed above, some evidence suggests that an antibody to spike protein enhances disease during SARS-CoV infection by inducing macrophage switching from a wound healing phenotype to an inflammatory phenotype 36 . Furthermore, influenza viruses and SARS-CoV also use the same ACE2 receptors to enter cells; these cells are known to infect macrophages and T cells 3,37 It is not yet known whether SARS-CoV-2 infection of these cells is productive 26 . However, the ACE2 receptor has been linked to acute lung injury for both viruses 38, 39 .
While the underlying risk-factors for an individual developing acute respiratory distress syndrome (ARDS) in response to SARS-CoV-2 infection have not yet been elucidated, it appears clear that a dysregulated immune response is central to this aspect of the disease 2,3,25,40 . In particular, chemokines are released following viral infection, which leads to the invasion of neutrophils and macrophages and release of reactive oxygen species (ROS). In addition, replication in the lower airways and exposure of endothelial cells may further amplify the inflammatory response 32 . Collectively, this leads to extensive tissue damage and depletion of epithelial cells, which may be connected to lethality 41 . Within the alveolar tissue, and systemically, the feedback between viral load, adaptive and innate immune response and tissue damage is clearly a complex system. By utilizing a multi-scale framework to implement these interactions, we aim to connect circulating biomarkers, putative treatments, and clinically observed disease progression to pathophysiological changes at the cell and tissue level.
It is important that model development takes into account the types of measurements and biological observations that will be available for later model constraint, calibration, and validation. As participation by the virology and pharmacology communities broadens, we anticipate that this list will grow. While we will endeavor to constrain and validate sub-modules of the model independently, we anticipate human clinical data to not fully determine parameters of the model. To address this concern we will apply a 'virtual population' approach and sensitivity analysis to explore model variability within clinically relevant bounds 42, 43 . To date, we anticipate the following data: 7 Organoid data for viral replication and targeted inhibition Aarthi Narayanan's virology lab is optimizing SARS-CoV-2 cultures in organoid model systems. The viral replication kinetics will be assessed by infection of different lung epithelial, fibroblast and endothelial cells, in addition to standard cell lines such as Vero cells. (Vero cells are likely to be the workhorse for inhibitor assessment studies). Primary cells and/or cell lines will be infected with SARS-CoV-2 at increasing multiplicities of infection and infectious viral titers in the supernatants assessed by plaque assays at multiple time points post initial infection. This will stretch from approximately 3 hours post infection up to 48 hours post infection depending on the cell type and the initial infectious dose of virus.
In parallel, the viral genomic copy numbers will be assessed in the same supernatant samples by qRT-PCR with virus specific primers. This will provide information on how the production of infectious virions compares with the number of genomic copies available outside the cell. If the numbers are skewed in the direction of genomic copies (which may happen in the context of some kinds of inhibitors), it will shed light on the mechanisms of inhibition involving inhibition of infectivity of progeny virions.
The viral genomic copy numbers inside the cells will also be assessed by qRT-PCR and compared to the genomic copies outside the cell. This will provide direction on the efficacy of particle packaging and the extent of production of infectious versus noninfectious virus. While it will not provide directly pertinent information about the possibility of heterogeneity of released virus populations and quasispecies, it can provide initial clues in that direction, which can then trigger more specific questions and relevant approaches. These approaches will be pursued for cell lines, primary cells and, hopefully, subsequently transitioned to organoid platforms.
From a host response point of view, we will pursue two aspects: host cell death and inflammatory responses. For cell survival and death measurements, we will employ an assay that measures ATP activity in cells (hence a reflection of a live cell) in the context of infection and inhibitor treatments. For inflammatory responses, we will assess supernatants for inflammatory mediators by ELISA (multiplexed). The cells will be lysed to obtain RNA, which will be queried for transcription of several genes associated with inflammatory responses using gene expression arrays (multiplexed).
Additional host response events will include mitochondrial activity and ROS production assessments in the context of infection and inhibitor treatments. The impact of anti-inflammatory strategies on mitochondrial activity and cell survival will be assessed to determine correlations between viral replication dependent and independent events.
Inflammation, ACE2 binding, and host response data Given the impact of SARS-CoV-2, we anticipate an unprecedented amount of mechanistic data to emerge from both clinical and preclinical sources. Of particular value in testing and refining the model will be randomized controlled interventional trials in general or specific populations. As of March, 30 2020, there were 119 trials registered at clinicaltrial.gov under the search term "COVID-19+Drug". Within this 119, there are multiple interventions at different points of the pathophysiology, including, but not limited to: hyperimmune plasma, IL-6 Antibody (e.g. Tocilizumab), protease inhibitors (e.g. Lopinavir/ritonavir), cloroquine/hydroxychloroquine, and Janus Kinases inhibitors (e.g. Baricitinib). As this platform develops, we anticipate predicting the responses to such therapies and refining the model with emerging data such that the range of clinical responses are captured with adequate fidelity. Additionally, data collected from patients or animals during infection, including the presence of various immune cell subsets in lung tissue and systemic markers of inflammation, will serve to differentiate responses to SARS-CoV-2. These data will be similarly integrated to calibrate and validate the model to ensure accurate predictions of therapeutic outcomes based on clinical characteristics.
8 dicting treatment responses [53] [54] [55] [56] [57] , and designing novel and more effective therapeutic approaches [58] [59] [60] . The classic within-host mathematical model of viral infection uses a system of ordinary differential equations (ODEs) to describe the dynamics between uninfected epithelial ("target") cells, infected cells in the eclipse phase, infected cells producing virus, and infectious virus 61 . This basic model has been shown to capture dynamics of both acute and chronic infection 62 , and has been extended to also include multiple viral (potentially resistant) strains 58 and various aspects of host immune responses 63, 64 . While such cell population-level models ODE models generally do not account for single-cell effects, they are effective for detailing viral load, host immune response, and pathology dynamics [65] [66] [67] [68] [69] [70] . Moreover, they can often be used to constrain and estimate parameters for more detailed models, develop novel hypotheses, and design confirmatory experiments 71, 72 .
Some have modeled intracellular virus replication, including very detailed models used for understanding replication and intervention points 43, 73 , typically using systems of ODEs 74, 75 . These models often include virus-receptor binding, receptor trafficking, endocytosis, viral uncoating, RNA transcription, protein synthesis, viral assembly, and viral exocytosis. However, to date no such model has been integrated with detailed spatiotemporal models of viral propagation in 3-D tissues with dynamical models of immune interactions.
Recently, agent-based models have been used to simulate viral propagation in 2-D tissues with simplified models of viral replication in individual cells, particularly in the field of influenza virus infection 76 a variety of other viral infections 77 , and oncolytic viral therapies [78] [79] [80] [81] . These models have generally not included detailed intracellular models of viral replication and individual cell responses to infection. However, they demonstrate the potential for including detailed intracellular models of viral replication in 2D and 3D tissues with the milieu of immune and epithelial cell types expected in actual patients, while also offering the opportunity to test hypotheses on the impact of viral mutagenicity and host cell heterogeneity on disease progression.
The rapid prototyping approach of this coalition will use a performance-driven agent-based modeling platform 82 to combine detailed intracellular models of viral endocytosis, replication, and exocytosis, disruption of cell processes (e.g. metabolism and compromised membranes) that culminate in cell death, inflammation signaling and immune responses, tissue damage, and other key effects outlined above in a comprehensive, open source simulation platform. We will deploy and refine interactive, web-hosted versions of the model to critical contributions by virologists, infectious disease modelers, and other domain experts. We will frequently update preprints to foster the fastest possible scientific dialog to iteratively refine this community resource.
Related modeling efforts and other future data sources
We are coordinating with related modeling efforts by a number of groups. In particular Thomas Hillen has organized a COVID-19 Physiology Reading Group 83 , where a growing community of modelers are exchanging information and progress. We will regularly work with this community to seek feedback on the model hypotheses, parameter insights, and code contributions, and share our work with them.
The COVID-19 Cell Atlas 84 organizes a variety of cell-scale datasets relevant to COVID-19; these may be of particular importance to intracellular modeling components of the project. The Human Biomolecular Atlas Program (HuBMAP) 85 is creating detailed maps of the human respiratory system at cell-and molecular-scale resolution; this will be an excellent data source for tissue geometry in later versions of the model.
PhysiCell: agent-based cell modeling with extracellular coupling
PhysiCell is an open source simulation agent-based modeling framework for multicellular systems in 2D and 3D dynamical tissue environments 82 86 .) In this framework, each cell (of any type) is an off-lattice agent with independent cell cycle progression, death processes, volume changes, and mechanics-driven movement. Each cell agent can have independent data and models attached to it, allowing substantial flexibility in adapting the framework to problems in cancer biology, microbiology, tissue engineering, and other fields. PhysiCell is 9 coupled to BioFVM (an open source biological diffusion solver) 87 to simulate the chemical microenvironment; as part of this coupling, each individual agent can secrete or uptake diffusing substrates and track the total amount of material entering and leaving the cell.
Relevant applications of PhysiCell-powered models have included modeling cancer nanotherapy 88 , oncolytic virus therapies 89 , tissue biomechanical feedbacks during tumor metastatic seeding 90 , and cancer immunology 82, 91, 92 . The platform has been built with a focus on computational efficiency and cross-platform compatibility: the same source code can be compiled and run without modification on Linux, OSX, and Windows, and simulations of up to 10 diffusing substrates on 10 mm 3 of tissue with 10 4 to 10 6 cells are routinely performed on desktop workstations. The platform has been combined with high-throughput computing 91 and active learning techniques 92 to power large-scale model exploration on high performance computing resources.
Custom functions can be attached to individual cell agents to model molecular-scale, intracellular processes and couple these with cell phenotypic parameters. These internal models are often implemented as systems of ODEs. For example, cell uptake of diffusing substrates can be coupled with a metabolism model (system ODEs), and the resulting energy output can be used to set the cell's cycle progression and necrotic death probability 93 . For small systems of ODEs, these models are coded "by hand" with standard finite difference techniques. More complex models are written in systems biology markup language (SBML) 94 These approaches will be used to assess (1) The CIABM is intended to be a generalizable model of CD8 dynamics, designed to represent different disease states resulting from different perturbations (i.e. specific infections of specific pathogens, putative vaccines and their administration strategy). This is consistent with our group's philosophy of pathophysiological unification through modeling. We have developed multiple ABMs related to the immune response and diseases related to inflammation and immune dysfunction 98, 99 , and will leverage this experience to integrate various aspects of these models as components of the CIABM. Many of these models are based on the IIRABM 98 , which is an abstract representation and simulation of the human inflammatory signaling network response to injury; the model has been calibrated such that it reproduces the general clinical trajectories seen in sepsis. The IIRABM operates by simulating multiple cell types and their interactions, including endothelial cells, macrophages, neutrophils, TH0, TH1, and TH2 cells as well as their associated precursor cells. The simulated system dies when total damage (defined as aggregate endothelial cell damage) exceeds 80%; this threshold represents the ability of current medical technologies to keep patients alive (i.e., through organ support machines) in conditions that previously would have been lethal. The IIRABM will be used in the CIABM to represent the innate and host tissue component of the CIABM.
The design principles of the CIABM are: 1) CD8-dynamics focused detail, 2) incorporation of the IIRABM as the innate-host tissue module, 3) incorporation of humoral and CD4 T-cell function, but at an abstracted level.The justification for aggregating humoral and CD4 functions is that they are primarily governed by interactions through the MHC2 complex, and therefore represent a distinct sensing/recognition capacity than CD8
. CC-BY 4.0 International license author/funder. It is made available under a The copyright holder for this preprint (which was not peer-reviewed) is the . https://doi.org/10.1101/2020.04.02.019075 doi: bioRxiv preprint MHC1-mediated recognition. We note that while we recognize that CD4-helper activity is known to assist the generation of CD8 memory, at the outset of this project we will attempt to see how well we can reproduce our clinically-acquired data without having to explicitly represent CD-4-helper function. If we are unable to satisfactorily map CIABM behavior to our experimental/clinical data, we will then add these components.
As a general description, the initial components of the innate immune response represent the end-effector of the system, primarily responsible for interactions influencing tissue damage, microbial killing and abstracted tissue reconstitution. This component incorporates both pro-and anti-inflammatory components, consistent with a self-contained control structure befitting its role as a highly-evolutionarily conserved, fundamental function of multi-cellular organisms. These agent types are: tissue, viral antigen load, polymorphonuclear neutrophil cells (PMNs), macrophages, dendritic cells, CD8 T-cells (naïve CD8N, cytotoxic effector CD8E), and regulatory Tcells.
The concurrent growth and advancements in the three areas of 1) mechanistic simulation modeling, 2) advanced, AI-driven model exploration algorithms, and 3) high-performance computing (HPC) provides the opportunity for large-scale exploration of the complex design spaces in detailed dynamical simulation models. However, if we don't take deliberate efforts to formally facilitate this intersection across our research communities, we risk producing a series of disparate individual efforts, limited in interoperability, transparency, reproducibility and scalability. The EMEWS (extreme model exploration with Swift) framework 100 was developed to directly address this issue and to provide a broadly applicable cyberinfrastructure to lower the barriers for utilization of advanced, large-scale model exploration on HPC resources. The EMEWS paradigm allows for the direct exploitation of cutting edge statistical and machine learning algorithms that make up the vibrant ecosystem of free and open source libraries that are continually added to and updated as research frontiers are expanded, all while controlling simulation workflows that can be run anywhere from desktops to campus clusters and to the largest HPC resources.
We have utilized EMEWS for learning-accelerated exploration of the parameter spaces of agent-based models of immunosurveillance against heterogeneous tumors 91, 92 . The approach allowed for iterative and efficient discovery of optimal control and regression regions within biological and clinical constraints of the multi-scale biological systems. We have applied EMEWS across multiple science domains [101] [102] [103] [104] and developed large-scale algorithms to improve parameter estimation through approximate Bayesian computation (ABC) approaches 105 . These approaches, applied to the multi-scale modeling of SARS-CoV-2 dynamics, will provide the ability to robustly characterize model behaviors and produce improved capabilities for their interpretation.
The nanoHUB platform (nanohub.org) 106 is a free, cloud-based service offering lectures, tutorials, and, of particular interest to us, interactive Web-based simulation tools. As its name implies, it is primarily focused on nanoscale science education and research. To make their simulation tools easier to use, nanoHUB provides a custom toolkit for developing graphical user interfaces (GUIs). However, since 2017, they have adopted and promoted the use of Jupyter notebooks 107 , with accompanying Python modules to provide GUI widgets and visualization. Cloud-based computing and data analysis platforms are well established now, in both academic and commercial settings. For those who provide easy-to-use Web-based GUIs and APIs, and offer affordable pricing, it is likely their rate of adoption will continue to increase, especially among researchers who may lack the expertise or resources to install complex pieces of software.
xml2jupyter and cloud deployment of PhysiCell models Compiled PhysiCell models generate executable software that runs at the command line. Model parameters are set by editing XML (extensible markup language) configuration files, and the models save data as a combination of vector graphics outputs (scalable vector graphics: SVG) and XML and Matlab files based on the draft MultiCellDS data standard 108 .
. CC-BY 4.0 International license author/funder. It is made available under a The copyright holder for this preprint (which was not peer-reviewed) is the . https://doi.org/10.1101/2020.04.02.019075 doi: bioRxiv preprint
To facilitate rapid cloud-hosted dissemination of PhysiCell-powered models on the nanoHUB platform, we developed xml2jupyter to automatically generate a Jupyter-based graphical user interface (GUI) for any PhysiCell model 109 . The Jupyter notebook includes widgets to set parameters, initiate a simulation run, and visualize diffusing substrates and cell agents. In turn, we also developed a protocol to deploy the PhysiCell model and the Jupyter notebook interface on nanoHUB as a cloud-hosted, interactive model. This allows developers to rapidly convert a locally executable, command-line model to a cloud-hosted shared model with graphical interface in a matter of minutes to hours (depending upon testing speed on nanoHUB).
In our rapid prototyping, we use rapidly-generated nanoHUB apps for scientific communication across disciplines: virologists, pharmacologists, and other domain experts can explore and visualize the model prototypes without need to download, compile, and understand the code. This facilitates faster multidisciplinary dialog, and helps to draw in broader community feedback and contributions.
The model will be evolved with a modular architecture. The overall model and each individual model component (submodel) will have a separate GitHub software repository in the pc4covid19 GitHub organization, available at: https://github.org/pc4covid19
Each module's repository will consist of a master branch (which will always match the latest numbered release) and a development branch. Contributors will fork the development branch, complete their milestones, and submit a pull request to incorporate their progress in the development branch. Whenever the submodel team is ready to make a numbered release, they will use a pull request from the development branch to the master branch and create a numbered release.
The overall model framework and each submodel will keep a versioned design document to include:
• A unique name for the model component 
Each submodel will have 1-2 chief scientists in charge of managing development and approving pull requests from contributors. The submodel chief scientist(s) will meet regularly with their team to assign tasks, set milestones, and asses when to make a release. The submodel chief scientist will coordinate their progress with the other submodel teams.
12 scope, exchange ideas on model hypotheses, evaluate community feedback, and plan overall strategy. They will cooperate with the overall leads to create model releases (which will always bundle the most stable version of each submodel), update the nanoHUB models, and update the bioRxiv preprint.
We use rapid prototyping, using lessons learned from each step to drive iteration towards improving the model. a. Distill feedback to assess the need for new model hypotheses, behaviors, or components. b. Assess which biological behaviors are currently exhibited by the model. c. Refine the design protocol (e.g., with refined model specification methods) as necessary. d. Assess the need for an additional design iteration. 9. Update preprint for scientific dissemination. Return to Step 1 if there is substantial feedback, or if the core team determines that further refinements are within project scope.
Once the model can qualitatively produce expected viral and immune behaviors (as determined by the core group) and receives no major domain expert or community critiques, the goal of this paper will be met: to create a SARS-CoV-2 modeling framework suitable for subsequent calibration, validation, and exploration by the community. It will be submitted to scientific peer review, disseminated to the community, and maintained.
14 Results Version 1 (March 25-March 31, 2020) Version 1 was designed as proof of concept rapid prototype to capture essential (but highly simplified) elements of viral endocytosis, protein synthesis, viral assembly, release, and diffusion to infect other cells. The model was tailored to RNA viruses on a tissue monolayer (modeled as a layer of epithelium over a basement membrane). This version was kept deliberately simple to create an early starting framework to help coalesce community feedback and contributions. It was also designed to test the use of interactive cloud-hosted models to help accelerate feedback by virologists and other domain experts through live demos.
The proof of concept model was created by the overall leads (Macklin, Heiland, Wang) while assembling the modeling coalition as an initial starting point and feasibility test for rapid prototyping. Feedback on this version drove the formulation of the design protocols recorded in this paper.
The Version 1 model includes the following submodel components:
• T: tissue (which contains epithelial and other cells)
• V: viral endocytosis, replication, and exocytosis repsonses • VR: cell response to viral replication, including cell death and IFN synthesis • E: epithelial cell (incorporates V and VR). The overall model components are summarized in Figure 1 .
In this proof of concept prototype, we modeled a simplified set of biological hypotheses: The copyright holder for this preprint (which was not peer-reviewed) is the . https://doi.org/10.1101/2020.04.02.019075 doi: bioRxiv preprint 1.T.2 Virus adhesion to a cell stops its diffusion (acts as an uptake term) 1.V.1 Adhered virus undergoes endocytosis and then becomes uncoated 1.V.2 Uncoated virus (viral contents) lead to release of functioning RNA 1.V.3 RNA creates protein forever, unless it degrades 1.V.4 Protein is transformed to an assembled virus state 1.V.5 Assembled virus is released by the cell 1.VR.1 As a proxy for viral disruption of the cell, the probability of cell death increases with the total number of assembled virions 1.VR.2 Apoptosed cells lyse and release some or all of their contents (In the above, X.C.Y denotes prototype X, modeling component C, biological hypothesis Y, allowing us to easily refer to any individual hypothesis or assumption in discussion and community feedback.) In the next version of this model, we will use the design document protocols for each of these components.
The first prototype should demonstrate the following behaviors for a single cell infected by a single virion:
• The virion progresses to the uncoated state.
• The uncoated virion progresses to the RNA state.
• With export and death off, RNA produces protein.
• With export and death turned off, protein produces and accumulates assembled virus (linearly).
• With export off and death on, cell undergoes apoptosis with increasing likelihood as assembled virus accumulates. • With export on and death on, surrounding cells get infected and create virion.
• Cells nearest the initial cell are infected first.
• Apoptosis is most frequent nearest to the initial infected cell.
To rapidly implement extracellular viral transport using existing model capabilities, we approximated the process as diffusion with a small diffusion coefficient as in prior nanoparticle models. Using the standard BioFVM formulation 87 , if ρ is the concentration of virions (virions / μm 3 ), then it is modeled as:
where D is the diffusion coefficient, λ is the net decay rate (which can include other removal processes), U is the uptake rate (by adhering to ACE2 and initiating endocytosis), and E is the cell's virion export rate. (Here, delta is the Dirac delta function, Vi is the cell's volume, and xi is position of the cell's center.) Note that in the default BioFVM implementation, uptake processes are spread across the cell's volume.
Note that virus propagation may require more explicit modeling of cell-cell surface contact in later versions, as well as cilia-driven advective transport and virion deposition (e.g., through airway transport). Within each cell, we track V (adhered virions in the process of endocytosis), U (uncoated viral RNA and proteins), R (viral RNA ready for protein synthesis; R = 1 denotes one virion's total mRNA), P (synthesized viral proteins; P = 1 denotes sufficient viral protein to assemble a complete virion), and A (total assembled virions ready for exocytosis). Virion import (a source term for V) is handled automatically by the mass conservation terms for PhysiCell in the PDE solutions.
We model these dynamics of internalized virions through a simplified system of ODEs: In this proof of concept prototype, we modeled apoptotic response to cell disruption but did not model interferon processes. As a simplification, we modeled cell disruption as correlated with assembled virions A, and we used a Hill pharmacodynamic model to relate the cell's apoptosis rate to A:
where e is the effect, n is the Hill coefficient, and AH is the amount of virions at which half-max effect is achieved. We then set the apoptotic death rate at
where e is the maximum apoptosis rate (at full effect, e = 1). As analyzed for agent-based models with stochastic death rates 82, 110 , in any time interval [t, t+∆t] , the cell has probability death Δ of apoptosing, and the mean cell survival time (for fixed e and thus fixed death ) is 1/ death .
In PhysiCell, we can set the lysing cells to release any fraction (0 ≤ release ≤ 1) of V, A, U, R, and P into the extracellular environment as diffusing substrates.
To differentiate between incoming imported and exported virions, we actually modeled two diffusing fields (for extracellular concentrations of V and A). At the end of each computational step, we manually move all of the exported assembled virions in each voxel into the concentration of diffusing virions.
We also created diffusing fields for uncoated virions, RNA, and viral proteins, for use in future models where these may be immunogenic or linked to measureable data.
. CC-BY 4.0 International license author/funder. It is made available under a The copyright holder for this preprint (which was not peer-reviewed) is the . https://doi.org/10.1101/2020.04.02.019075 doi: bioRxiv preprint 17 Software release
The core model associated with the v1 prototype is Version 0.1.3. The nanoHUB app associated with the v1 prototype is Version 1.0. GitHub releases and zenodo snapshots are given in the appendix in the appendix.
We rapidly created and deployed a cloud-hosted model with an interactive Web-based graphical user interface (GUI) running on nanoHUB (nanohub.org) using xml2jupyter Version 1.1 109 . The web-hosted model can be run at https://nanohub.org/tools/pc4covid19. This workflow uses a Python script that converts a PhysiCell configuration file (in XML) into a Jupyter notebook and adds additional Python modules for the GUI. The automated process of converting a standalone PhysiCell model into an interactive Jupyter notebook version (a GUI) takes just a few minutes. The resulting GitHub repository is shared with the nanoHUB system administrators who install it for testing as an online, executable model (an "app"). After we perform usability and other testing and finalize documentation,, it is published and becomes available for public use. The whole process (including the initial development of the core PhysiCell model) took less than 12 hours for this particular app. See 
Running the overall model (with virus release turned on and off as appropriate for the respective unit tests) shows that the v1 prototype satisfies all the qualitative unit tests: a single cell is infected with a virion in the center of the tissue. Over time, the virion is uncoated to create functionalized RNA, which is synthesized to viral proteins and assembled to functional virus. The graphical output shows this center cell turning to a bright yellow as assembled virions accumulate. By enabling the substrate plot, we can see the diffusive field of virions first has zero concentration (no virions have been released), but as the first cell's viral production increases, it releases virus particles that begin diffusing into the domain. See Figure 3 (A).
Over time, neighboring cells also become infected. They, too progress towards a higher viral load (increasingly bright shades of yellow). The infection propagates outward from the initially infected cell into the remaining tissue. As each cell's viral load (here measured as number of assembled virions) increases, the viral response model calculates the increasing effect e, and cells have greater probability of apoptosis. Cells nearest to the initial site of infection apoptose earliest. As these cells degrade, they are removed from the simulation, leading to the creation of a degraded, cell-free region near the center of the tissue. This degraded region spreads outwards from the initial site of infection over time.
See 
We next tested the effect of the viral diffusion coefficient by reducing it from 900 μm 2 /min to 90 μm 2 /min. Because the viral particles spread less distance after their release, they reach other cells more slowly, and the overall spread of the infection is slowed. See Figure 3 (B).
We left D = 90 μm 2 /min for all subsequent investigations of the v1 model.
We next tested the effect of releasing all assembled viral particles at the time of cell death by setting frelease = 1. For this set of model parameters, the release of assembled virions had a negligent impact of the overall spread of infection: Compare the final frame of row B (no release: frelease = 0) to row C (compete release: frelease = 1) in Figure 3 . This is because cells release far more virions during their infected lifetimes, so the effect is dominant over the one-time release of virions at cell death. We expect this behavior would change if the cells exocytosed virions more slowly.
We next decreased the cell tolerance to viral load by decreasing the pharmacodynamic half max AH from 500 virions to 10, while leaving frelease = 1. As expected, cell death and tissue damage occurred much more quickly under these parameters. Interestingly (and contrary to intuition), this did not significantly alter the rate at which the infection spread through the tissue. Compare the final frame of row C (higher tolerance to viral load) to row D (lower tolerance to viral load) in Figure 3 . This shows the importance of creating spatiotemporal models of viral replication in tissues, as the balance of competing processes can lead to unexpected dynamics at the tissue, organ, and organism levels.
She also noted that her laboratory has looked a lot at the renin-angiotensin-system systemically and in kidneys: the kinetics of AngII, ACE, and ACE2 in the lungs would be of interest for connecting the next iteration of the ACE2 receptor model to connect to ARDS. Pfizer may also have relevant related models.
Courtney L. Davis (mathematical biology, infectious diseases and ecology) noted that the model could study immune responses and the impact of mucosal structure in future versions. She suggested quantifying damage or disease metrics. She also noted that ultimately it would be useful to note which parameter estimates might be species-specific and which are not, to be able to switch between experimental and clinical systems. (e.g., it is worth recording if current estimates are from human, macaque, etc.)
She also noted that it may be important to determine if apoptotic cells replaced or if there is permanent damage (in the model). If the model is run longer, it would be worthwhile to translate the visual sense of damage to a quantitative metric.
An noted their work on modeling immune expansion in "off screen" lymph nodes, and offered to link their model to our immune infiltration functions.
James Glazier noted the need for clearly specifying each model's assumptions, inputs and outputs, to drive robust parallel development. He noted that it is critical to consider information flow between submodels and revise these data flows as the iterations proceed. He suggested that we state separate execution of sub models as a key design goal to support parallel development. Lastly, he noted that software should be released in conjunction with validation data and methodologies Core team discussion and priorities for v2
The core team met by virtual conference on April 1, 2020 to discuss the first preprint, model results, and feedback. The core team set as priorities (1) to formalize design specifications for each individual model component and interfaces between components, (2) form teams responsible for each component, (3) focus v2 development on refactoring into this modular format, (3) begin development of the submodels, and (4) begin refine parameter estimates. The clearer specification and organization of submodels was the top priority. As time permits, it was also viewed as important to begin a receptor trafficking model.
The core team agreed to keep working via the dedicated slack workspace to rapidly coalesce on the submoel teams. Each subteam will have a separate channel in the workspace.
Within three weeks of the World Health Organization's declaration of a global pandemic of COVID-19 114 , community-based prototyping built upon an existing PhysiCell 3D cell-modeling framework to rapidly develop Version 1 of an intracellular and tissue-level model of SARS-CoV-2 82 . A growing coalition of domain experts from across STEM fields are working together to ensure accuracy and utility of this agent-based model of intracellular, extracellular, and multicellular SARS-CoV-2 infection dynamics. Version 1 development underscored the necessity of clearly explaining model components, defining scope, and communicating progress as it occurs for invaluable real-time feedback from collaborators and the broader community. This rapid prototyping already helped in growing the coalition and recruiting complementary expertise; for instance, a team modeling lymph node dynamics and immune infiltration joined during the Version 1 cycle after seeing initial progress.
The version 1 prototype also showed the scientific benefit of rapid prototyping: even a basic coupling between extracellular virion transport, intracellular replication dynamics, and viral response (apoptosis) showed the direct relationship between the extracellular virion transport rate and the spread of infection in a tissue. More importantly, it showed that for viruses that rapidly create and exocytose new virions, release of additional assembled virions at the time of cell death does not significantly speed the spread of infection. Moreover, decreasing the cell tolerance to viral load does not drastically change the rate at which the infection spreads, but it does accelerate the rate of tissue damage and loss, which could potentially trigger edema and ARDS earlier. This 22 suggests that working to slow apoptosis may help preserve tissue integrity and delay adverse severe respiratory responses. That such a simple model could already point to actionable hypotheses for experimental and clinical investigations points to the value of rapid model iteration and investigation, rather than waiting for a "perfect" model that incorporates all processes with mechanistic molecular-scale detail.
As work on future versions progresses, teams will work in parallel on submodels to add, parameterize, and test new model components. It will be important to balance the need for new functionality with the requirement for constrained scope, while also balancing the importance of model validation with timely dissemination of results. Thus, this preprint will be updated with every development cycle to invite feedback and community contributions. Between cycles, the most up-to-date information about this model can be found at http://covid19.physicell.org.
To get involved, we welcome biological expertise, especially related to model assumptions, hypotheses, infection dynamics, and interpretation of results. Mathematical contributions to the underlying model or model analysis as well as data contributions for crafting, parameterizing, and validating model predictions are particularly sought.
We encourage the community to test the web-hosted hosted model at https://nanohub.org/tools/pc4covid19. This model will be frequently updated to reflect progress, allowing the public to take advantage of this rapid prototyping effort.
We avidly encourage the community to test the model, offer feedback, and join our growing coalition via Google survey (https://forms.gle/SVUMYWhipSHfX8nS8), by direct messaging Paul Macklin on Twitter (@MathCancer), or by joining the pc4covid19 slack workspace (invitation link). Updates will frequently be disseminated on social media by Paul Macklin (@MathCancer), the PhysiCell project (@PhysiCell), the Society for Mathematical Biology subgroup for Immunobiology and Infection Subgroup (@smb_imin), and others.
We also encourage developers to watch the pc4covid19 GitHub organization and to contribute bug reports and software patches to the corresponding (sub)model repositories. See https://github.com/pc4covid19
We are encouraged by the fast recognition of the computational and infectious disease communities that we can make rapid progress against COVID-19 if we pool our expertise and resources. Together, we can make a difference in understanding viral dynamics and suggesting treatment strategies to slow infection, improve immune response, and minimize or prevent adverse immune responses. We note that this work will not only help us address SARS-CoV-2, but will also provide a framework for readiness for future emerging pathogens.
